{"version":3,"sourceRoot":"","sources":["../../scss/page.scss","../../scss-non-compile/breakpoint.scss"],"names":[],"mappings":"AAIA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;ACkCE;ED1CJ;IAWI;;;AAGF;EACE;EACA;;AC0BA;ED5BF;IAKI;;;ACuBF;ED5BF;IASI;;;AAMJ;EACE;EACA;;;AAMJ;EACE;;ACIE;EDLJ;IAII;;;AAIJ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;;ACzBF;EDuBA;IAKI;;;AC5BJ;EDuBA;IASI;;;AAMR;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;;AAKJ;EACE;;AAEA;EACE;EACA;EACA;EACA;EACA;;AAEA;EACE;EACA;;AAKF;EACE;;AAMJ;EACE;;AAKJ;EACE;EACA;;ACrFE;EDmFJ;IAKI;;;AAIA;EACE;EACA;EACA;EACA;;AAIJ;EACE;;ACrGA;EDoGF;IAGI","file":"page.css","sourcesContent":["// import css non compile\n@import \"../scss-non-compile/breakpoint\";\n@import \"../scss-non-compile/var\";\n\n.banner-title-page {\n  width: 100%;\n  position: relative;\n  padding-top: 170px;\n  padding-bottom: 100px;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  .title-wrap {\n    position: absolute;\n    z-index: 2;\n    color: white;\n    top: 0;\n    bottom: 0;\n    margin: auto 0;\n    padding-top: 70px;\n    height: fit-content;\n\n    @include screen-less('mobile') {\n      flex-direction: column;\n    }\n\n    .title {\n      font-size: 50px;\n      text-transform: uppercase;\n\n      @include screen-less('tablet') {\n        font-size: 40px;\n      }\n\n      @include screen-less('mobile') {\n        font-size: 30px;\n      }\n    }\n  }\n\n  #breadcrumbs {\n    a {\n      color: white !important;\n      font-size: 20px;\n    }\n  }\n}\n\n.body-content {\n  p {\n    font-size: 20px;\n\n    @include screen-less('mobile') {\n      font-size: 16px;\n    }\n  }\n\n  .bg-img-content-center {\n    width: 100%;\n    position: relative;\n    padding-top: 150px;\n    padding-bottom: 150px;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-attachment: fixed;\n\n    .title-wrap {\n      position: absolute;\n      z-index: 2;\n      color: white;\n      top: 0;\n      bottom: 0;\n      margin: auto 0;\n      height: fit-content;\n      flex-direction: column;\n\n      .title {\n        font-size: 50px;\n        text-transform: uppercase;\n\n        @include screen-less('tablet') {\n          font-size: 40px;\n        }\n\n        @include screen-less('mobile') {\n          font-size: 30px;\n        }\n      }\n    }\n  }\n\n  .row-analyze {\n    width: 100%;\n    list-style: none;\n    padding-left: 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n\n    > li {\n      padding: 10px;\n    }\n  ;\n  }\n\n  .text-middle-line {\n    width: 100%;\n\n    .text {\n      width: 100%;\n      text-align: left;\n      border-bottom: 1px solid #000;\n      line-height: 0.1em;\n      margin: 10px 0 20px;\n\n      span {\n        background: #fff;\n        padding-right: 10px;\n      }\n    }\n\n    &.middle-line-secondary {\n      .text {\n        border-bottom: 1px solid rgba(var(--bs-secondary-rgb), var(--bs-text-opacity)) !important;\n      }\n    }\n  }\n\n  .content-wrap {\n    img {\n      max-width: 100%;\n    }\n\n  }\n\n  .row-2-side {\n    display: flex;\n    flex-direction: row;\n\n    @include screen-less('mobile') {\n      flex-direction: column;\n    }\n\n    .col-image {\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        object-position: center;\n      }\n    }\n\n    & > .left-side, & > .right-side {\n      width: 50%;\n      @include screen-less('mobile') {\n        width: 100%;\n      }\n    }\n  }\n}","$breakpoints: (\n'mobile':  767px,\n'tablet': 992px,\n'pc':  1200px\n) !default;\n\n/// Mixin to manage responsive breakpoints\n/// @author Kitty Giraudel\n/// @param {String} $breakpoint - Breakpoint name\n/// @require $breakpoints\n@mixin respond-to($breakpoint) {\n  // If the key exists in the map\n  @if map-has-key($breakpoints, $breakpoint) {\n    // Prints a media query based on the value\n\n    @if $breakpoint == 'pc' {\n      @media (min-width: map-get($breakpoints, 'tablet')) {\n        @content;\n      }\n    }\n    @else if $breakpoint == 'tablet' {\n      @media (max-width: map-get($breakpoints, 'tablet')) and (min-width: map-get($breakpoints, 'mobile')) {\n        @content;\n      }\n    }\n    @else if $breakpoint == 'mobile' {\n      @media (max-width: map-get($breakpoints, 'mobile')) {\n        @content;\n      }\n    }\n    @else {\n      @media (min-width: map-get($breakpoints, $breakpoint)) {\n        @content;\n      }\n    }\n  }\n\n    // If the key doesn't exist in the map\n  @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n  }\n}\n\n@mixin screen-less($breakpoint) {\n  // If the key exists in the map\n  @if map-has-key($breakpoints, $breakpoint) {\n    // Prints a media query based on the value\n\n    @if $breakpoint == 'pc' {\n      @media (min-width: map-get($breakpoints, 'tablet')) {\n        @content;\n      }\n    }\n    @else {\n      @media (max-width: map-get($breakpoints, $breakpoint)) {\n        @content;\n      }\n    }\n  }// If the key doesn't exist in the map\n  @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n  }\n}\n\n@mixin screen-more($breakpoint) {\n  // If the key exists in the map\n  @if map-has-key($breakpoints, $breakpoint) {\n    // Prints a media query based on the value\n      @media (min-width: map-get($breakpoints, $breakpoint)) {\n        @content;\n      }\n  }// If the key doesn't exist in the map\n  @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n  }\n}"]}